;; Analyzed by ClojureScript 0.0-3211
{:name clojure_notes.core, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {dom goog.dom, goog.dom goog.dom, events goog.events, goog.events goog.events}, :imports nil, :defs {notes {:name clojure_notes.core/notes, :file "src/clojure_notes/core.cljs", :line 5, :column 1, :end-line 5, :end-column 11, :test true, :meta {:file "/Users/dustinmartin/Projects/clojure_notes/src/clojure_notes/core.cljs", :line 5, :column 6, :end-line 5, :end-column 11}}, log {:protocol-inline nil, :meta {:file "/Users/dustinmartin/Projects/clojure_notes/src/clojure_notes/core.cljs", :line 7, :column 7, :end-line 7, :end-column 10, :arglists (quote ([value]))}, :name clojure_notes.core/log, :variadic false, :file "src/clojure_notes/core.cljs", :end-column 10, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value])), :test true}, add-note {:protocol-inline nil, :meta {:file "/Users/dustinmartin/Projects/clojure_notes/src/clojure_notes/core.cljs", :line 12, :column 7, :end-line 12, :end-column 15, :arglists (quote ([text]))}, :name clojure_notes.core/add-note, :variadic false, :file "src/clojure_notes/core.cljs", :end-column 15, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text])), :test true}, remove-note {:protocol-inline nil, :meta {:file "/Users/dustinmartin/Projects/clojure_notes/src/clojure_notes/core.cljs", :line 18, :column 7, :end-line 18, :end-column 18, :arglists (quote ([text]))}, :name clojure_notes.core/remove-note, :variadic false, :file "src/clojure_notes/core.cljs", :end-column 18, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text])), :test true}, reset-notes {:protocol-inline nil, :meta {:file "/Users/dustinmartin/Projects/clojure_notes/src/clojure_notes/core.cljs", :line 26, :column 7, :end-line 26, :end-column 18, :arglists (quote ([]))}, :name clojure_notes.core/reset-notes, :variadic false, :file "src/clojure_notes/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}}}